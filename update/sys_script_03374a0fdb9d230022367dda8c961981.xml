<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_195647_aws__accounts</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>AutoSetupAwsAccount</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current) {
    //1 - find or create AWS user
    //2 - find or create Account assignment group
    //3 - Add user to group
    //4 - relate User to account
    //5 - relate Group to account

    gs.info("RUN - Auto account setup for " + current.name);
    var assignment_user = (function find_or_create_AWS_user() {
        if (current.assignment_user) {
            return current.assignment_user;
        } else {
            var sys_user = new GlideRecord('sys_user');
            sys_user.addQuery('user_name','=', 'aws');
            sys_user.query();
            if (sys_user.next()) {
                gs.info("Found existing AWS user id:" + sys_user.name);
                return sys_user;
            } else {
                var new_user = new GlideRecord('sys_user');
                new_user.initialize();
                new_user.name = 'AWS';
                new_user.user_name = 'aws';
                new_user.internal_integration_user = true;
                new_user.active = false;
                new_user.insert();
                gs.info("Created assignment user " + new_user.name + " for AWS account: " + current.name );
                return new_user;
            }
        }
    })();
    
    var assignment_group = (function find_or_create_AWS_group() {
        if (current.assignment_group) {
            return current.assignment_group;
        } else {
            var group = new GlideRecord('sys_user_group');
            group.addQuery('name','=', 'AWS-' + current.name);
            group.query();
            if (group.next()) {
                gs.info("Found existing AWS assingment group for this account " + current.name);
                return group;
            } else {
                var new_group = new GlideRecord('sys_user_group');
                new_group.initialize();
                new_group.name = 'AWS-' + current.name;
                new_group.insert();
                gs.info("Created assignment group " + new_group.name + " for AWS account: " + current.name );
                return new_group;
            }

        }
    })();
    
    var group_membership = (function function_name() {
        var grmember = new GlideRecord('sys_user_grmember');
        grmember.addQuery('group','=', current.assignment_group.sys_id);
        grmember.addQuery('user','=', current.assignment_user.sys_id);
        grmember.query();
        if (grmember.next()) {
            gs.info("User " + current.assignment_user.name + " already belongs to group " + current.assignment_group.name);
            return grmember;
        } else {
            var new_grmember = new GlideRecord('sys_user_grmember');
            new_grmember.initialize();
            new_grmember.user = current.assignment_user.sys_id;
            new_grmember.group = current.assignment_group.sys_id;
            new_grmember.insert();
            gs.info("User " + current.assignment_user.name + " was added to group " + current.assignment_group.name);
            return new_grmember;
        }
    })();

    current.assignment_user = assignment_user.sys_id;
    current.assignment_group = assignment_group.sys_id;
    current.auto_setup = false;
    current.update();

})(current);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-26 15:28:08</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>03374a0fdb9d230022367dda8c961981</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>AutoSetupAwsAccount</sys_name>
        <sys_overrides/>
        <sys_package display_value="AwsSupport" source="x_195647_aws_">23f1ab6bdb41230022367dda8c961976</sys_package>
        <sys_policy/>
        <sys_scope display_value="AwsSupport">23f1ab6bdb41230022367dda8c961976</sys_scope>
        <sys_update_name>sys_script_03374a0fdb9d230022367dda8c961981</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-10-26 15:29:01</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=03374a0fdb9d230022367dda8c961981"/>
</record_update>
